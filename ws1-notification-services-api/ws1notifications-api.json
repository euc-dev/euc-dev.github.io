{
  "swagger": "2.0",
  "info": {
    "description": "An API to take actions on Notifications",
    "version": "1.0",
    "title": "Notifications API"
  },
  "host": "localhost:8080",
  "basePath": "/ws1notifications",
  "tags": [
    {"name": "Create Notifications"},
    {"name": "Create Distributed Notifications"},
    {"name": "Fetch Notifications"},
    {"name": "Delete Notifications"},
    {"name": "Mark Notifications as Read/Unread"}
  ],
  "paths": {
    "/notification-card-styles": {
      "get": {
        "tags": ["Notification Card Styles"],
        "summary": "Returns CSS stylesheet for rendering \"rich_description\" from the GET /notifications API calls. This API supports ETags.",
        "operationId": "NotificationsStylesheet",
        "produces": ["text/css"],
        "parameters": [
          {
            "in": "header",
            "name": "If-None-Match",
            "type": "string",
            "description": "(Not Required) A response header \"Etag\" will be provided when this API is initially called. Send any subsequent calls with the \"Etag\" in this header. If this value matches the current \"Etag\" the an empty response body with a 304 NOT MODIFIED status code will be returned.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/css":{}
            },
            "headers": {
              "Etag": {
                "description": "A string identifier representing the cached response body contents.",
                "type": "string"
              }
            }
          },
          "304": { 
            "description": "Not Modified",
            "headers": {
              "Etag": {
                "description": "A string identifier representing the cached response body contents.",
                "type": "string"
              }
            }
          }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v1/devices/{targetDeviceId}/notifications": {
      "post": {
        "tags": ["Create Notifications"],
        "summary": "Creates a notification for a specific device.",
        "operationId": "createNotificationUsingPOST_6",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "notificationCard",
            "required": false,
            "schema": { "$ref": "#/definitions/NotificationCard" }
          },
          {
            "name": "targetDeviceId",
            "in": "path",
            "description": "device udid (if this is the only field specified, user id will match the requesting user)",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetTenantId",
            "in": "path",
            "description": "tenant name (defaults to current tenant if not specified)",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetUserId",
            "in": "path",
            "description": "user id (defaults to current user if not specified)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Notification" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      },
      "get": {
        "tags": ["Fetch Notifications"],
        "summary": "Returns a list of notifications for the current user",
        "operationId": "getNotificationsUsingGET_4",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "actionedState",
            "in": "query",
            "description": "only show records in acted upon state: ANY(default), ACTIONED, UNACTIONED",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": ["ANY", "ACTIONED", "UNACTIONED"]
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "device udid (supports passing in \"ALL_DEVICES\" to get notifications across all devices)",
            "required": false,
            "type": "string"
          },
          {
            "name": "readState",
            "in": "query",
            "description": "only show records in read state: ANY (default), READ, UNREAD",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": ["READ", "UNREAD", "ANY"]
          },
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenant name",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": false,
            "type": "string"
          },
          {
            "name": "richText",
            "in": "path",
            "description": "[SaaS Only] This property tells the server if the client supports HTML in the Notification Card. Passing \"true\" will result in the addition of a property \"rich_description\" in \"notification_card.body\" of each notification returned. If \"rich_description\" has not been defined when the notification was created, then \"rich_description\" will not be returned and \"description\" will be returned.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "snippet",
            "in": "path",
            "description": "[SaaS Only] This property contains a 150 character substring of the \"description\" (not \"rich_description\").",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Notification" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v1/distributed_notifications": {
      "post": {
        "tags": ["Create Distributed Notifications"],
        "summary": "Synchronously creates a notification to be received by up to 100 recipients.",
        "operationId": "createDistributedNotificationsUsingPOST_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "notificationData",
            "description": "notificationData",
            "required": true,
            "schema": { "$ref": "#/definitions/DistributedNotifications" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ObjectNode" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v1/distributed_notifications_async": {
      "post": {
        "tags": ["Create Distributed Notifications"],
        "summary": "Asynchronously creates a notification to be received by many recipients.",
        "operationId": "createDistributedNotificationsAsyncUsingPOST_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "notificationData",
            "description": "notificationData",
            "required": true,
            "schema": { "$ref": "#/definitions/DistributedNotifications" }
          },
          {
            "name": "targetTenantId",
            "in": "path",
            "description": "tenant name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": { "type": "string" }
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v1/notifications": {
      "get": {
        "tags": ["Fetch Notifications"],
        "summary": "Returns a list of notifications for the current user.",
        "operationId": "getNotificationsUsingGET_5",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "actionedState",
            "in": "query",
            "description": "only show records in acted upon state: ANY(default), ACTIONED, UNACTIONED",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": ["ANY", "ACTIONED", "UNACTIONED"]
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "device udid (supports passing in \"ALL_DEVICES\" to get notifications across all devices)",
            "required": false,
            "type": "string"
          },
          {
            "name": "readState",
            "in": "query",
            "description": "only show records in read state: ANY (default), READ, UNREAD",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": ["READ", "UNREAD", "ANY"]
          },
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenant name",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": false,
            "type": "string"
          },
          {
            "name": "richText",
            "in": "path",
            "description": "[SaaS Only] This property tells the server if the client supports HTML in the Notification Card. Passing \"true\" will result in the addition of a property \"rich_description\" in \"notification_card.body\" of each notification returned. If \"rich_description\" has not been defined when the notification was created, then \"rich_description\" will not be returned and \"description\" will be returned.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "snippet",
            "in": "path",
            "description": "[SaaS Only] This property contains a 150 character substring of the \"description\" (not \"rich_description\").",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Notification" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      },
      "post": {
        "tags": ["Create Notifications"],
        "summary": "Creates a notification",
        "operationId": "createNotificationUsingPOST_7",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "notificationCard",
            "required": false,
            "schema": { "$ref": "#/definitions/NotificationCard" }
          },
          {
            "name": "targetDeviceId",
            "in": "path",
            "description": "device udid (if this is the only field specified, user id will match the requesting user)",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetTenantId",
            "in": "path",
            "description": "tenant name (defaults to current tenant if not specified)",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetUserId",
            "in": "path",
            "description": "user id (defaults to current user if not specified)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Notification" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      },
      "patch": {
        "tags": ["Create Notifications"],
        "summary": "bulkUpdateNotifications",
        "operationId": "bulkUpdateNotificationsUsingPATCH_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "changes",
            "description": "changes",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/BulkUpdateNotification" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ObjectNode" }
          },
          "204": { "description": "No Content" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v1/notifications/{notificationId}": {
      "get": {
        "tags": ["Fetch Notifications"],
        "summary": "Returns a specific notification determined by the provided notificationId.",
        "operationId": "getNotificationUsingGET_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "notification id",
            "required": true,
            "type": "string"
          },
          {
            "name": "richText",
            "in": "path",
            "description": "[SaaS Only] This property tells the server if the client supports HTML in the Notification Card. Passing \"true\" will result in the addition of a property \"rich_description\" in \"notification_card.body\" of each notification returned. If \"rich_description\" has not been defined when the notification was created, then \"rich_description\" will not be returned and \"description\" will be returned.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "snippet",
            "in": "path",
            "description": "[SaaS Only] This property contains a 150 character substring of the \"description\" (not \"rich_description\").",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Notification" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      },
      "put": {
        "tags": ["Create Notifications"],
        "summary": "Update existing or create new notification",
        "operationId": "updateOrCreateNotificationUsingPUT_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "notification id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "notificationCard",
            "required": false,
            "schema": { "$ref": "#/definitions/NotificationCard" }
          },
          {
            "name": "targetUserId",
            "in": "path",
            "description": "user id (defaults to current user if not specified)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Notification" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      },
      "delete": {
        "tags": ["Delete Notifications"],
        "summary": "Deletes a notification",
        "operationId": "deleteNotificationUsingDELETE_1",
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "notification id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "204": { "description": "No Content" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v1/notifications/{notificationId}/read": {
      "put": {
        "tags": ["Mark Notifications as Read/Unread"],
        "summary": "Marks a notification as read.",
        "operationId": "markNotificationAsReadUsingPUT_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "actionId",
            "in": "query",
            "description": "card action id causing the notification to be marked read",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "id",
            "in": "path",
            "description": "notification id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Notification" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v1/notifications/{notificationId}/unread": {
      "put": {
        "tags": ["Mark Notifications as Read/Unread"],
        "summary": "Marks a notification as unread.",
        "operationId": "markNotificationAsUnreadUsingPUT_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "notification id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Notification" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v1/tenants/{targetTenantId}/distributed_notifications_async": {
      "post": {
        "tags": ["Create Distributed Notifications"],
        "summary": "Asynchronously creates a notification to be received by many recipients.",
        "operationId": "createDistributedNotificationsAsyncUsingPOST_3",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "notificationData",
            "description": "notificationData",
            "required": true,
            "schema": { "$ref": "#/definitions/DistributedNotifications" }
          },
          {
            "name": "targetTenantId",
            "in": "path",
            "description": "tenant name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": { "type": "string" }
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v1/tenants/{targetTenantId}/users/{targetUserId}/devices/{targetDeviceId}/notifications": {
      "post": {
        "tags": ["Create Notifications"],
        "summary": "Creates a notification for a specific user and device. This API requires a Service Token.",
        "operationId": "createNotificationUsingPOST_8",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "notificationCard",
            "required": false,
            "schema": { "$ref": "#/definitions/NotificationCard" }
          },
          {
            "name": "targetDeviceId",
            "in": "path",
            "description": "device udid (if this is the only field specified, user id will match the requesting user)",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetTenantId",
            "in": "path",
            "description": "tenant name (defaults to current tenant if not specified)",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetUserId",
            "in": "path",
            "description": "user id (defaults to current user if not specified)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Notification" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v1/tenants/{targetTenantId}/users/{targetUserId}/notifications": {
      "post": {
        "tags": ["Create Notifications"],
        "summary": "Creates a notification for a specific user for all their devices and browsers.",
        "operationId": "createNotificationUsingPOST_9",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "notificationCard",
            "required": false,
            "schema": { "$ref": "#/definitions/NotificationCard" }
          },
          {
            "name": "targetDeviceId",
            "in": "path",
            "description": "device udid (if this is the only field specified, user id will match the requesting user)",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetTenantId",
            "in": "path",
            "description": "tenant name (defaults to current tenant if not specified)",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetUserId",
            "in": "path",
            "description": "user id (defaults to current user if not specified)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Notification" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v1/tenants/{tenantId}/users/{targetUserId}/devices/{targetDeviceId}/notifications": {
      "get": {
        "tags": ["Fetch Notifications"],
        "summary": "Returns a list of notifications for the current user. This API requires a Service Token.",
        "operationId": "getNotificationsUsingGET_6",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "actionedState",
            "in": "query",
            "description": "only show records in acted upon state: ANY(default), ACTIONED, UNACTIONED",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": ["ANY", "ACTIONED", "UNACTIONED"]
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "device udid (supports passing in \"ALL_DEVICES\" to get notifications across all devices)",
            "required": false,
            "type": "string"
          },
          {
            "name": "readState",
            "in": "query",
            "description": "only show records in read state: ANY (default), READ, UNREAD",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": ["READ", "UNREAD", "ANY"]
          },
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenant name",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": false,
            "type": "string"
          },
          {
            "name": "richText",
            "in": "path",
            "description": "[SaaS Only] This property tells the server if the client supports HTML in the Notification Card. Passing \"true\" will result in the addition of a property \"rich_description\" in \"notification_card.body\" of each notification returned. If \"rich_description\" has not been defined when the notification was created, then \"rich_description\" will not be returned and \"description\" will be returned.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "snippet",
            "in": "path",
            "description": "[SaaS Only] This property contains a 150 character substring of the \"description\" (not \"rich_description\").",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Notification" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v1/users/{targetUserId}/devices/{targetDeviceId}/notifications": {
      "post": {
        "tags": ["Create Notifications"],
        "summary": "Creates a notification for a specific device.",
        "operationId": "createNotificationUsingPOST_10",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "notificationCard",
            "required": false,
            "schema": { "$ref": "#/definitions/NotificationCard" }
          },
          {
            "name": "targetDeviceId",
            "in": "path",
            "description": "device udid (if this is the only field specified, user id will match the requesting user)",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetTenantId",
            "in": "path",
            "description": "tenant name (defaults to current tenant if not specified)",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetUserId",
            "in": "path",
            "description": "user id (defaults to current user if not specified)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Notification" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      },
      "get": {
        "tags": ["Fetch Notifications"],
        "summary": "Returns a list of notifications for the current user.",
        "operationId": "getNotificationsUsingGET_7",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "actionedState",
            "in": "query",
            "description": "only show records in acted upon state: ANY(default), ACTIONED, UNACTIONED",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": ["ANY", "ACTIONED", "UNACTIONED"]
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "device udid (supports passing in \"ALL_DEVICES\" to get notifications across all devices)",
            "required": false,
            "type": "string"
          },
          {
            "name": "readState",
            "in": "query",
            "description": "only show records in read state: ANY (default), READ, UNREAD",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": ["READ", "UNREAD", "ANY"]
          },
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenant name",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": false,
            "type": "string"
          },
          {
            "name": "richText",
            "in": "path",
            "description": "[SaaS Only] This property tells the server if the client supports HTML in the Notification Card. Passing \"true\" will result in the addition of a property \"rich_description\" in \"notification_card.body\" of each notification returned. If \"rich_description\" has not been defined when the notification was created, then \"rich_description\" will not be returned and \"description\" will be returned.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "snippet",
            "in": "path",
            "description": "[SaaS Only] This property contains a 150 character substring of the \"description\" (not \"rich_description\").",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Notification" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v1/users/{targetUserId}/notifications": {
      "post": {
        "tags": ["Create Notifications"],
        "summary": "Creates a notification for a specific user",
        "operationId": "createNotificationUsingPOST_11",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "notificationCard",
            "required": false,
            "schema": { "$ref": "#/definitions/NotificationCard" }
          },
          {
            "name": "targetDeviceId",
            "in": "path",
            "description": "device udid (if this is the only field specified, user id will match the requesting user)",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetTenantId",
            "in": "path",
            "description": "tenant name (defaults to current tenant if not specified)",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetUserId",
            "in": "path",
            "description": "user id (defaults to current user if not specified)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Notification" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v1/users/{targetUserId}/notifications/{notificationId}": {
      "put": {
        "tags": ["Create Notifications"],
        "summary": "Updates an existing notification or Creates a new notification.",
        "operationId": "updateOrCreateNotificationUsingPUT_3",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "notification id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "notificationCard",
            "required": false,
            "schema": { "$ref": "#/definitions/NotificationCard" }
          },
          {
            "name": "targetUserId",
            "in": "path",
            "description": "user id (defaults to current user if not specified)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Notification" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v2/distributed_notifications": {
      "post": {
        "tags": ["Create Distributed Notifications"],
        "summary": "Synchronously creates a notification to be received by up to 100 recipients.",
        "operationId": "createDistributedNotificationsV2UsingPOST_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "notificationData",
            "description": "notificationData",
            "required": true,
            "schema": { "$ref": "#/definitions/DistributedNotifications" }
          },
          {
            "name": "targetTenantId",
            "in": "path",
            "description": "tenant name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Batch" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v2/distributed_notifications_async": {
      "post": {
        "tags": ["Create Distributed Notifications"],
        "summary": "Asynchronously creates a notification to be received by many recipients.",
        "operationId": "createDistributedNotificationsAsyncV2UsingPOST_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "notificationData",
            "description": "notificationData",
            "required": true,
            "schema": { "$ref": "#/definitions/DistributedNotifications" }
          },
          {
            "name": "targetTenantId",
            "in": "path",
            "description": "tenant name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": { "type": "string" }
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v2/tenants/{targetTenantId}/distributed_notifications": {
      "post": {
        "tags": ["Create Distributed Notifications"],
        "summary": "Synchronously creates a notification to be received by up to 100 recipients",
        "operationId": "createDistributedNotificationsV2UsingPOST_3",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "notificationData",
            "description": "notificationData",
            "required": true,
            "schema": { "$ref": "#/definitions/DistributedNotifications" }
          },
          {
            "name": "targetTenantId",
            "in": "path",
            "description": "tenant name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Batch" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v2/tenants/{targetTenantId}/distributed_notifications_async": {
      "post": {
        "tags": ["Create Distributed Notifications"],
        "summary": "Asynchronously creates a notification to be received by many recipients.",
        "operationId": "createDistributedNotificationsAsyncV2UsingPOST_3",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "notificationData",
            "description": "notificationData",
            "required": true,
            "schema": { "$ref": "#/definitions/DistributedNotifications" }
          },
          {
            "name": "targetTenantId",
            "in": "path",
            "description": "tenant name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": { "type": "string" }
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v3/distributed_notifications_async": {
      "post": {
        "tags": ["Create Distributed Notifications"],
        "summary": "Asynchronously creates a notification to be received by many recipients.",
        "operationId": "createDistributedNotificationsAsyncV2UsingPOST_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "notificationData",
            "description": "notificationData",
            "required": true,
            "schema": { "$ref": "#/definitions/DistributedNotifications" }
          },
          {
            "name": "targetTenantId",
            "in": "path",
            "description": "tenant name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": { "type": "string" }
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    },
    "/api/v3/tenants/{targetTenantId}/distributed_notifications_async": {
      "post": {
        "tags": ["Create Distributed Notifications"],
        "summary": "Asynchronously creates a notification to be received by many recipients.",
        "operationId": "createDistributedNotificationsAsyncV2UsingPOST_3",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "notificationData",
            "description": "notificationData",
            "required": true,
            "schema": { "$ref": "#/definitions/DistributedNotifications" }
          },
          {
            "name": "targetTenantId",
            "in": "path",
            "description": "tenant name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": { "type": "string" }
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "Authorization: Bearer <JWT>": ["example"] }],
        "deprecated": false
      }
    }
  },
  "securityDefinitions": {
    "Authorization: Bearer <JWT>": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "ArrayNode": { "type": "object", "title": "ArrayNode" },
    "Batch": {
      "type": "object",
      "properties": {
        "actioned_count": { "type": "integer", "format": "int32" },
        "batch_completed": { "type": "boolean" },
        "created_at": { "type": "string", "format": "date-time" },
        "creator_id": { "type": "string" },
        "failure_count": { "type": "integer", "format": "int32" },
        "id": { "type": "string" },
        "results": { "type": "string" },
        "success_count": { "type": "integer", "format": "int32" },
        "tenant_id": { "type": "string" },
        "total_recipients_count": { "type": "integer", "format": "int32" },
        "updated_at": { "type": "string", "format": "date-time" }
      },
      "title": "Batch"
    },
    "BulkUpdateNotification": {
      "type": "object",
      "properties": {
        "action_id": { "type": "string" },
        "notification_id": { "type": "string" },
        "read_state": { "type": "string", "enum": ["READ", "UNREAD", "ANY"] }
      },
      "title": "BulkUpdateNotification"
    },
    "DistributedNotifications": {
      "type": "object",
      "properties": {
        "notification_card": { "type": "object" },
        "recipients": {
          "example": [
            "user1",
            "user2",
            { "user_id": "user3", "device_id": "abcd" }
          ],
          "$ref": "#/definitions/ArrayNode"
        },
        "user_ids": {
          "example": "This property has been deprecated.  See recipients.",
          "$ref": "#/definitions/ArrayNode"
        }
      },
      "title": "DistributedNotifications"
    },
    "Notification": {
      "type": "object",
      "properties": {
        "batch_id": { "type": "string" },
        "created_at": { "type": "string", "format": "date-time" },
        "creator_id": { "type": "string" },
        "device_id": { "type": "string" },
        "id": { "type": "string" },
        "last_action_id": { "type": "string" },
        "notification_card": { "type": "object" },
        "read_at": { "type": "string", "format": "date-time" },
        "tenant_id": { "type": "string" },
        "updated_at": { "type": "string", "format": "date-time" },
        "user_id": { "type": "string" }
      },
      "title": "Notification"
    },
    "NotificationCard": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "example": [
            {
              "id": "00000000-0000-0000-0000-000000000000",
              "label": "Comment",
              "url": {
                "href": "https://hero/connectors/jira/api/v1/issues/249650/comment"
              },
              "type": "POST",
              "action_key": "USER_INPUT",
              "request": {},
              "user_input": [
                { "id": "body", "label": "Comment", "format": "textarea" }
              ],
              "completed_label": "Commented",
              "allow_repeated": true
            },
            {
              "id": "00000000-0000-0000-0000-000000000000",
              "label": "Open",
              "url": { "href": "https://jira.acme.com/browse/APF-27" },
              "type": "GET",
              "action_key": "OPEN_IN",
              "request": {},
              "user_input": [],
              "completed_label": "Open",
              "allow_repeated": true
            },
            {
              "id": "00000000-0000-0000-0000-000000000000",
              "label": "Watch",
              "url": {
                "href": "https://hero/connectors/jira/api/v1/issues/249650/watchers"
              },
              "type": "POST",
              "action_key": "DIRECT",
              "request": {},
              "user_input": [],
              "completed_label": "Watching",
              "allow_repeated": false
            }
          ],
          "description": "The card's Actions",
          "items": { "$ref": "#/definitions/NotificationCardAction" }
        },
        "body": {
          "description": "The card's body",
          "$ref": "#/definitions/NotificationCardBody"
        },
        "creation_date": {
          "type": "string",
          "example": "2012-04-21T18:25:43-05:00",
          "description": "When the card was created. In ISO 8601 format"
        },
        "expiration_date": {
          "type": "string",
          "example": "2012-04-21T18:25:43-06:00",
          "description": "When the card will expire. In ISO 8601 format"
        },
        "header": {
          "description": "The card's header",
          "$ref": "#/definitions/NotificationCardHeader"
        },
        "id": {
          "type": "string",
          "example": "2e298e34-f2be-4463-ae7b-88748e105a1f",
          "description": "Unique ID of the card"
        },
        "image": {
          "example": { "href": "https://my-connector/images/connector.png" },
          "description": "Link to an image to use for the card's icon",
          "$ref": "#/definitions/NotificationCardLink"
        },
        "importance": {
          "type": "integer",
          "format": "int32",
          "example": 0,
          "description": "The importance of the card. An importance of 0 is the highest importance and larger numbers indicate lower importance"
        },
        "template": {
          "example": {
            "href": "https://hero/connectors/jira/templates/generic.hbs"
          },
          "description": "Link to a Handlebars template for rendering the card",
          "$ref": "#/definitions/NotificationCardLink"
        }
      },
      "title": "NotificationCard"
    },
    "NotificationCardAction": {
      "type": "object",
      "properties": {
        "action_key": {
          "type": "string",
          "example": "OPEN_IN",
          "description": "An arbitrary string used by the client to distinguish this action from other actions that may be sent"
        },
        "allow_repeated": {
          "type": "boolean",
          "example": true,
          "description": "Whether or not the action can be clicked again after successfully completed"
        },
        "completed_label": {
          "type": "string",
          "example": "Done",
          "description": "A human-readable message to display on successful completion of the action"
        },
        "id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000",
          "description": "Unique ID of the action"
        },
        "label": {
          "type": "string",
          "example": "Open",
          "description": "A human-readable description of the action to be shown in the card"
        },
        "mutually_exclusive_set_id": {
          "type": "string",
          "example": "sample_set_id",
          "description": "A string to allow grouping of actions. When an action in this group successfully completes, the other actions will hide."
        },
        "primary": {
          "type": "boolean",
          "example": true,
          "description": "Whether or not the action is a primary action and should be colored differently than the non-primary actions"
        },
        "remove_card_on_completion": {
          "type": "boolean",
          "example": false,
          "description": "Whether or not clients should remove the card upon successful completion of this action"
        },
        "request": {
          "type": "object",
          "description": "Hard-coded fields to be sent with the action request"
        },
        "type": {
          "type": "string",
          "example": "GET",
          "description": "The HTTP method to use for submitting the action request"
        },
        "url": {
          "example": "https://www.example.com/sample/path/to/resource",
          "description": "Link to the action. Optionally prefixed with X-Routing-Prefix. See Request Headers in wiki",
          "$ref": "#/definitions/NotificationCardLink"
        },
        "user_input": {
          "type": "array",
          "description": "Allows the user to enter data to be submitted in this action",
          "items": { "$ref": "#/definitions/NotificationCardActionUserInput" }
        }
      },
      "title": "NotificationCardAction"
    },
    "NotificationCardActionUserInput": {
      "type": "object",
      "properties": {
        "format": {
          "type": "string",
          "example": "sample_format",
          "description": "The type of the user input"
        },
        "id": {
          "type": "string",
          "example": "sample_id",
          "description": "The field's ID, which will be used as the key when this field is submitted"
        },
        "label": {
          "type": "string",
          "example": "sample_label",
          "description": "The field's label, which will be displayed to the user to describe the expected content of the field"
        },
        "max_length": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "The maximum length of the field"
        },
        "min_length": {
          "type": "integer",
          "format": "int32",
          "example": 0,
          "description": "The minimum length of the field"
        }
      },
      "title": "NotificationCardActionUserInput"
    },
    "NotificationCardBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "example": "This is a sample description",
          "description": "Description of the body. This would typically be rendered as plain body text near the top of the card"
        },
        "fields": {
          "type": "array",
          "example": [
            {
              "type": "GENERAL",
              "title": "Project",
              "description": "App Platform"
            },
            {
              "type": "GENERAL",
              "title": "Component",
              "description": "Hero Card Server"
            },
            { "type": "GENERAL", "title": "Priority", "description": "P3" },
            { "type": "GENERAL", "title": "Status", "description": "Active" },
            {
              "type": "GENERAL",
              "title": "Resolution",
              "description": "Done/Fixed"
            },
            {
              "type": "GENERAL",
              "title": "Assignee",
              "description": "Rob Worsnop"
            },
            {
              "type": "GENERAL",
              "title": "Fix Version",
              "description": "Mobile Flows GA"
            },
            {
              "type": "COMMENT",
              "title": "Comment",
              "content": [
                { "text": "jsmith - This is another comment" },
                { "text": "jdoe - This is a comment" }
              ]
            }
          ],
          "description": "The fields of the body, if any. Fields are rendered differently according to their type attribute",
          "items": { "$ref": "#/definitions/NotificationCardBodyField" }
        },
        "rich_description": {
          "type": "string",
          "example": "<span class=\"color-gray\">This is a sample <strong>rich</strong> description</span>",
          "description": "Supported only by \"/v3/distributed_notifications_async\". This property may contain HTML. \nSupported HTML Tags: br, b, i, u, ol, li, span, div, p, em, strong\nSupported HTML classes: \"color-gray\", \"color-red\", \"color-orange\", \"color-yellow\", \"color-green\", \"color-teal\", \"color-blue\""
        },
        "snippet": {
          "type": "string",
          "example": "This is a sample description",
          "description": "This property is generated by the server. It will contain a maximum 150 character substring of thr \"description\" (not \"rich_description\")."
        }
      },
      "title": "NotificationCardBody"
    },
    "NotificationCardBodyField": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "description": "The content of this field, which can consist of arbitrary JSON objects. The client will use the field's type attribute to determine how to parse the content",
          "items": { "type": "object" }
        },
        "description": {
          "type": "string",
          "description": "Description of the field"
        },
        "title": { "type": "string", "description": "Title of notification" },
        "type": { "type": "string", "description": "Type of notification" }
      },
      "title": "NotificationCardBodyField"
    },
    "NotificationCardHeader": {
      "type": "object",
      "properties": {
        "subtitle": {
          "type": "array",
          "description": "Subtitle of Notification Card",
          "items": { "type": "string" }
        },
        "title": {
          "type": "string",
          "example": "[Jira] Add unit/integration tests",
          "description": "Title of Notification Card"
        }
      },
      "title": "NotificationCardHeader"
    },
    "NotificationCardLink": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "example": "https://www.example.com/path/to/resource",
          "description": "href"
        }
      },
      "title": "NotificationCardLink"
    },
    "ObjectNode": { "type": "object", "title": "ObjectNode" }
  }
}
